[tool.poetry]
name = "module214"
version = "0.1.0"
description = ""
authors = ["Strategs <127782103+Strategs@users.noreply.github.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.104.0"
uvicorn = {extras = ["standart"], version = "^0.23.2"}
sqlalchemy = "^2.0.22"
psycopg2 = "^2.9.9"
alembic = "^1.12.0"
pydantic = {extras = ["email"], version = "^2.4.2"}
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.6"
python-dotenv = "^1.0.0"
libgravatar = "^1.0.4"
pip = "^23.3.1"
install = "^1.3.5"
pydantic-settings = "^2.0.3"
cloudinary = "^1.36.0"
fastapi-mail = "^1.4.1"
redis = "^4.5.1"
fastapi-limiter = "0.1.5"


[tool.poetry.group.dev.dependencies]
sphinx = "^7.2.6"


[tool.poetry.group.test.dependencies]
httpx = "^0.25.2"
pytest = "^7.4.3"
pytest-cov = "^4.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
pythonpath = ["."]

[tool.coverage.run]
branch = true

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    ]

ignore_errors = true

[tool.coverage.html]
directory = "coverage_html_report"